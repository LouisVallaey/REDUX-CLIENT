{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/louisvallaey/redux-client/src/containers/CustomerList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport _ from \"lodash\";\nimport { GetCustomerList } from \"../actions/customerActions\";\nimport CustomerItem from \"../components/CustomerItem\";\nimport styled from \"styled-components\";\nimport { useHistory } from \"react-router-dom\";\nconst CustomerTable = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 80%;\n  margin: 0px auto 0px auto;\n`;\n_c = CustomerTable;\nconst CustomerHeader = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 80%;\n  margin: 40px auto 0px auto;\n`;\n_c2 = CustomerHeader;\nconst CsvBox = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  width: 80%;\n  margin: 40px auto 0px auto;\n\n  p {\n    margin-right: 10px;\n  }\n`;\n_c3 = CsvBox;\nconst CustomerAddButtons = styled.div`\n  display: flex;\n  flex-direction: row;\n  width: 80%;\n  margin: 40px auto 0px auto;\n  button {\n    cursor: pointer;\n    background-color: #1c7293;\n    color: white;\n    width: 100%;\n    height: 40px;\n    margin: 20px;\n    border: none;\n    border-radius: 5px;\n    outline: none;\n    &:hover {\n      background-color: #1f8db8;\n    }\n  }\n`;\n_c4 = CustomerAddButtons;\n\nconst CustomerList = () => {\n  _s();\n\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const customerList = useSelector(state => state.CustomerList);\n  const [addone, setaddone] = useState(false);\n  const [addmultiple, setaddmultiple] = useState(false);\n  const [deletecustomers, setdeletecustomer] = useState(false);\n\n  const handleCustomerClick = userid => {\n    history.push(\"/customer/\" + userid);\n  };\n\n  useEffect(() => {\n    FetchData();\n  }, []);\n\n  const FetchData = () => {\n    dispatch(GetCustomerList());\n  };\n\n  const ShowData = () => {\n    if (!_.isEmpty(customerList.data)) {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [!addmultiple && !addone && !deletecustomers && /*#__PURE__*/_jsxDEV(CustomerAddButtons, {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setaddone(true),\n            children: \"Add Customer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setaddmultiple(true),\n            children: \"Add Customers\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: null,\n            children: \"Delete all\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this), addmultiple && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(CsvBox, {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Upload .CSV file:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(CSVReader, {\n              cssClass: \"csv-reader-input\",\n              onFileLoaded: handleCSV,\n              parserOptions: parseOptions,\n              inputId: \"csvId\",\n              inputStyle: {\n                color: \"black\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 15\n          }, this), mutationLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Processing and uploading data...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 35\n          }, this), mutationError && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Error, Please try again\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true), addone && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Formik, {\n            initialValues: {\n              firstName: \"\",\n              lastName: \"\",\n              email: \"\"\n            },\n            validationSchema: CustomerSchema,\n            onSubmit: values => {\n              console.log(values);\n              addCustomer({\n                variables: {\n                  newcustomers: [values]\n                }\n              });\n              toast.success(\"succesfully added customer to list\", {\n                position: \"top-right\",\n                autoClose: 4000,\n                hideProgressBar: false,\n                closeOnClick: true,\n                pauseOnHover: true,\n                draggable: true,\n                progress: undefined\n              });\n              refetch();\n            },\n            children: ({\n              errors,\n              touched\n            }) => /*#__PURE__*/_jsxDEV(Form, {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"firstName\",\n                children: \"First Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                name: \"firstName\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"lastName\",\n                children: \"Last Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                name: \"lastName\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"email\",\n                children: \"Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                name: \"email\",\n                type: \"email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                children: \"Submit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 15\n          }, this), mutationLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Processing and uploading data...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 35\n          }, this), mutationError && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Error, Please try again\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true), /*#__PURE__*/_jsxDEV(CustomerHeader, {\n          children: /*#__PURE__*/_jsxDEV(CustomerItem, {\n            _id: \"ID\",\n            firstName: \"firstName\",\n            lastName: \"lastName\",\n            email: \"email\",\n            customerSince: \"customerSince\"\n          }, \"header\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CustomerTable, {\n          children: customerList.data.map(({\n            _id,\n            firstName,\n            lastName,\n            email,\n            customerSince\n          }) => /*#__PURE__*/_jsxDEV(CustomerItem, {\n            handleCustomerClick: handleCustomerClick,\n            _id: _id,\n            firstName: firstName,\n            lastName: lastName,\n            email: email,\n            customerSince: customerSince\n          }, _id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true);\n    }\n\n    if (customerList.loading) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 14\n      }, this);\n    }\n\n    if (customerList.errMsg !== \"\") {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: customerList.errMsg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 14\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"unable get data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 12\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: ShowData()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 189,\n    columnNumber: 10\n  }, this);\n};\n\n_s(CustomerList, \"yp84hWr+4lr7ktBeScZ5JIIcy4w=\", false, function () {\n  return [useHistory, useDispatch, useSelector];\n});\n\n_c5 = CustomerList;\nexport default CustomerList;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"CustomerTable\");\n$RefreshReg$(_c2, \"CustomerHeader\");\n$RefreshReg$(_c3, \"CsvBox\");\n$RefreshReg$(_c4, \"CustomerAddButtons\");\n$RefreshReg$(_c5, \"CustomerList\");","map":{"version":3,"sources":["/Users/louisvallaey/redux-client/src/containers/CustomerList.js"],"names":["React","useEffect","useState","useDispatch","useSelector","_","GetCustomerList","CustomerItem","styled","useHistory","CustomerTable","div","CustomerHeader","CsvBox","CustomerAddButtons","CustomerList","history","dispatch","customerList","state","addone","setaddone","addmultiple","setaddmultiple","deletecustomers","setdeletecustomer","handleCustomerClick","userid","push","FetchData","ShowData","isEmpty","data","handleCSV","parseOptions","color","mutationLoading","mutationError","firstName","lastName","email","CustomerSchema","values","console","log","addCustomer","variables","newcustomers","toast","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","refetch","errors","touched","map","_id","customerSince","loading","errMsg"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport _ from \"lodash\";\nimport { GetCustomerList } from \"../actions/customerActions\";\nimport CustomerItem from \"../components/CustomerItem\";\nimport styled from \"styled-components\";\nimport { useHistory } from \"react-router-dom\";\n\nconst CustomerTable = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 80%;\n  margin: 0px auto 0px auto;\n`;\n\nconst CustomerHeader = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 80%;\n  margin: 40px auto 0px auto;\n`;\n\nconst CsvBox = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  width: 80%;\n  margin: 40px auto 0px auto;\n\n  p {\n    margin-right: 10px;\n  }\n`;\n\nconst CustomerAddButtons = styled.div`\n  display: flex;\n  flex-direction: row;\n  width: 80%;\n  margin: 40px auto 0px auto;\n  button {\n    cursor: pointer;\n    background-color: #1c7293;\n    color: white;\n    width: 100%;\n    height: 40px;\n    margin: 20px;\n    border: none;\n    border-radius: 5px;\n    outline: none;\n    &:hover {\n      background-color: #1f8db8;\n    }\n  }\n`;\n\nconst CustomerList = () => {\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const customerList = useSelector((state) => state.CustomerList);\n\n  const [addone, setaddone] = useState(false);\n  const [addmultiple, setaddmultiple] = useState(false);\n  const [deletecustomers, setdeletecustomer] = useState(false);\n\n  const handleCustomerClick = (userid) => {\n    history.push(\"/customer/\" + userid);\n  };\n  useEffect(() => {\n    FetchData();\n  }, []);\n\n  const FetchData = () => {\n    dispatch(GetCustomerList());\n  };\n\n  const ShowData = () => {\n    if (!_.isEmpty(customerList.data)) {\n      return (\n        <>\n          {!addmultiple && !addone && !deletecustomers && (\n            <CustomerAddButtons>\n              <button onClick={() => setaddone(true)}>Add Customer</button>\n              <button onClick={() => setaddmultiple(true)}>\n                Add Customers\n              </button>\n              <button onClick={null}>Delete all</button>\n            </CustomerAddButtons>\n          )}\n\n          {addmultiple && (\n            <>\n              <CsvBox>\n                <p>Upload .CSV file:</p>\n                <CSVReader\n                  cssClass=\"csv-reader-input\"\n                  onFileLoaded={handleCSV}\n                  parserOptions={parseOptions}\n                  inputId=\"csvId\"\n                  inputStyle={{ color: \"black\" }}\n                />\n              </CsvBox>\n              {mutationLoading && <p>Processing and uploading data...</p>}\n              {mutationError && <p>Error, Please try again</p>}\n            </>\n          )}\n          {addone && (\n            <>\n              <Formik\n                initialValues={{\n                  firstName: \"\",\n                  lastName: \"\",\n                  email: \"\",\n                }}\n                validationSchema={CustomerSchema}\n                onSubmit={(values) => {\n                  console.log(values);\n                  addCustomer({ variables: { newcustomers: [values] } });\n                  toast.success(\"succesfully added customer to list\", {\n                    position: \"top-right\",\n                    autoClose: 4000,\n                    hideProgressBar: false,\n                    closeOnClick: true,\n                    pauseOnHover: true,\n                    draggable: true,\n                    progress: undefined,\n                  });\n                  refetch();\n                }}\n              >\n                {({ errors, touched }) => (\n                  <Form>\n                    <label htmlFor=\"firstName\">First Name</label>\n                    <Field name=\"firstName\" />\n\n                    <label htmlFor=\"lastName\">Last Name</label>\n                    <Field name=\"lastName\" />\n\n                    <label htmlFor=\"email\">Email</label>\n                    <Field name=\"email\" type=\"email\" />\n\n                    <button type=\"submit\">Submit</button>\n                  </Form>\n                )}\n              </Formik>\n              {mutationLoading && <p>Processing and uploading data...</p>}\n              {mutationError && <p>Error, Please try again</p>}\n            </>\n          )}\n\n          <CustomerHeader>\n            <CustomerItem\n              key={\"header\"}\n              _id={\"ID\"}\n              firstName={\"firstName\"}\n              lastName={\"lastName\"}\n              email={\"email\"}\n              customerSince={\"customerSince\"}\n            ></CustomerItem>\n          </CustomerHeader>\n          <CustomerTable>\n            {customerList.data.map(\n              ({ _id, firstName, lastName, email, customerSince }) => (\n                <CustomerItem\n                  handleCustomerClick={handleCustomerClick}\n                  key={_id}\n                  _id={_id}\n                  firstName={firstName}\n                  lastName={lastName}\n                  email={email}\n                  customerSince={customerSince}\n                ></CustomerItem>\n              )\n            )}\n          </CustomerTable>\n        </>\n      );\n    }\n\n    if (customerList.loading) {\n      return <p>loading...</p>;\n    }\n    if (customerList.errMsg !== \"\") {\n      return <p>{customerList.errMsg}</p>;\n    }\n    return <p>unable get data</p>;\n  };\n\n  return <p>{ShowData()}</p>;\n};\n\nexport default CustomerList;\n"]},"metadata":{},"sourceType":"module"}