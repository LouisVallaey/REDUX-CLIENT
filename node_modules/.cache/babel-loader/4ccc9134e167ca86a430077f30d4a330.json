{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/louisvallaey/redux-client/src/containers/CustomerList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport _ from \"lodash\";\nimport { GetCustomerList } from \"../actions/customerActions\";\nimport CustomerItem from \"../components/CustomerItem\";\nimport styled from \"styled-components\";\nimport { useHistory } from \"react-router-dom\";\nconst CustomerTable = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 80%;\n  margin: 0px auto 0px auto;\n`;\n_c = CustomerTable;\nconst CustomerHeader = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 80%;\n  margin: 40px auto 0px auto;\n`;\n_c2 = CustomerHeader;\nconst CustomerAddButtons = styled.div`\n  display: flex;\n  flex-direction: row;\n  width: 80%;\n  margin: 40px auto 0px auto;\n  button {\n    cursor: pointer;\n    background-color: #1c7293;\n    color: white;\n    width: 100%;\n    height: 40px;\n    margin: 20px;\n    border: none;\n    border-radius: 5px;\n    outline: none;\n    &:hover {\n      background-color: #1f8db8;\n    }\n  }\n`;\n_c3 = CustomerAddButtons;\n\nconst CustomerList = () => {\n  _s();\n\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const customerList = useSelector(state => state.CustomerList);\n  const [addone, setaddone] = useState(false);\n  const [addmultiple, setaddmultiple] = useState(false);\n  const [deletecustomer, setdeletecustomer] = useState(false);\n\n  const handleCustomerClick = userid => {\n    history.push(\"/customer/\" + userid);\n  };\n\n  useEffect(() => {\n    FetchData();\n  }, []);\n\n  const FetchData = () => {\n    dispatch(GetCustomerList());\n  };\n\n  const ShowData = () => {\n    if (!_.isEmpty(customerList.data)) {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [!addmultiple && !addone && !deletecustomer && /*#__PURE__*/_jsxDEV(CustomerAddButtons, {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setaddone(true),\n            children: \"Add Customer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setaddmultiple(true),\n            children: \"Add Customers\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: deleteAllCustomers,\n            children: \"Delete all\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(CustomerHeader, {\n          children: /*#__PURE__*/_jsxDEV(CustomerItem, {\n            _id: \"ID\",\n            firstName: \"firstName\",\n            lastName: \"lastName\",\n            email: \"email\",\n            customerSince: \"customerSince\"\n          }, \"header\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CustomerTable, {\n          children: customerList.data.map(({\n            _id,\n            firstName,\n            lastName,\n            email,\n            customerSince\n          }) => /*#__PURE__*/_jsxDEV(CustomerItem, {\n            handleCustomerClick: handleCustomerClick,\n            _id: _id,\n            firstName: firstName,\n            lastName: lastName,\n            email: email,\n            customerSince: customerSince\n          }, _id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true);\n    }\n\n    if (customerList.loading) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 14\n      }, this);\n    }\n\n    if (customerList.errMsg !== \"\") {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: customerList.errMsg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 14\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"unable get data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 12\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: ShowData()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 10\n  }, this);\n};\n\n_s(CustomerList, \"7ckdhwkEAuhTFRIqsFP+t48kN+g=\", false, function () {\n  return [useHistory, useDispatch, useSelector];\n});\n\n_c4 = CustomerList;\nexport default CustomerList;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"CustomerTable\");\n$RefreshReg$(_c2, \"CustomerHeader\");\n$RefreshReg$(_c3, \"CustomerAddButtons\");\n$RefreshReg$(_c4, \"CustomerList\");","map":{"version":3,"sources":["/Users/louisvallaey/redux-client/src/containers/CustomerList.js"],"names":["React","useEffect","useDispatch","useSelector","_","GetCustomerList","CustomerItem","styled","useHistory","CustomerTable","div","CustomerHeader","CustomerAddButtons","CustomerList","history","dispatch","customerList","state","addone","setaddone","useState","addmultiple","setaddmultiple","deletecustomer","setdeletecustomer","handleCustomerClick","userid","push","FetchData","ShowData","isEmpty","data","deleteAllCustomers","map","_id","firstName","lastName","email","customerSince","loading","errMsg"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport _ from \"lodash\";\nimport { GetCustomerList } from \"../actions/customerActions\";\nimport CustomerItem from \"../components/CustomerItem\";\nimport styled from \"styled-components\";\nimport { useHistory } from \"react-router-dom\";\n\nconst CustomerTable = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 80%;\n  margin: 0px auto 0px auto;\n`;\n\nconst CustomerHeader = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 80%;\n  margin: 40px auto 0px auto;\n`;\n\nconst CustomerAddButtons = styled.div`\n  display: flex;\n  flex-direction: row;\n  width: 80%;\n  margin: 40px auto 0px auto;\n  button {\n    cursor: pointer;\n    background-color: #1c7293;\n    color: white;\n    width: 100%;\n    height: 40px;\n    margin: 20px;\n    border: none;\n    border-radius: 5px;\n    outline: none;\n    &:hover {\n      background-color: #1f8db8;\n    }\n  }\n`;\n\nconst CustomerList = () => {\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const customerList = useSelector((state) => state.CustomerList);\n\n  const [addone, setaddone] = useState(false);\n  const [addmultiple, setaddmultiple] = useState(false);\n  const [deletecustomer, setdeletecustomer] = useState(false);\n\n  const handleCustomerClick = (userid) => {\n    history.push(\"/customer/\" + userid);\n  };\n  useEffect(() => {\n    FetchData();\n  }, []);\n\n  const FetchData = () => {\n    dispatch(GetCustomerList());\n  };\n\n  const ShowData = () => {\n    if (!_.isEmpty(customerList.data)) {\n      return (\n        <>\n          {!addmultiple && !addone && !deletecustomer && (\n            <CustomerAddButtons>\n              <button onClick={() => setaddone(true)}>Add Customer</button>\n              <button onClick={() => setaddmultiple(true)}>\n                Add Customers\n              </button>\n              <button onClick={deleteAllCustomers}>Delete all</button>\n            </CustomerAddButtons>\n          )}\n\n          <CustomerHeader>\n            <CustomerItem\n              key={\"header\"}\n              _id={\"ID\"}\n              firstName={\"firstName\"}\n              lastName={\"lastName\"}\n              email={\"email\"}\n              customerSince={\"customerSince\"}\n            ></CustomerItem>\n          </CustomerHeader>\n          <CustomerTable>\n            {customerList.data.map(\n              ({ _id, firstName, lastName, email, customerSince }) => (\n                <CustomerItem\n                  handleCustomerClick={handleCustomerClick}\n                  key={_id}\n                  _id={_id}\n                  firstName={firstName}\n                  lastName={lastName}\n                  email={email}\n                  customerSince={customerSince}\n                ></CustomerItem>\n              )\n            )}\n          </CustomerTable>\n        </>\n      );\n    }\n\n    if (customerList.loading) {\n      return <p>loading...</p>;\n    }\n    if (customerList.errMsg !== \"\") {\n      return <p>{customerList.errMsg}</p>;\n    }\n    return <p>unable get data</p>;\n  };\n\n  return <p>{ShowData()}</p>;\n};\n\nexport default CustomerList;\n"]},"metadata":{},"sourceType":"module"}