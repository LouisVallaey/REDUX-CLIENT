{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/louisvallaey/redux-client/src/containers/CustomerPage.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { GetCustomer } from \"../actions/customerActions\";\nimport _ from \"lodash\";\nimport \"../App.css\";\nimport { Field, Form, Formik } from \"formik\";\n\nconst CustomerPage = props => {\n  _s();\n\n  const customerId = props.match.params.id;\n  const dispatch = useDispatch();\n  const customerItem = useSelector(state => state.CustomerItem);\n  useEffect(() => {\n    FetchData();\n  }, []);\n\n  const FetchData = () => {\n    dispatch(GetCustomer(customerId));\n  };\n\n  const ShowData = () => {\n    if (!_.isEmpty(customerItem.data[customerId])) {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: customerItem.data[customerId]._id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: customerItem.data[customerId].firstName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: customerItem.data[customerId].lastName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: customerItem.data[customerId].email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: customerItem.data[customerId].customerSince\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Formik, {\n          initialValues: {\n            firstName: customerItem.data[customerId].firstName,\n            lastName: customerItem.data[customerId].lastName,\n            email: customerItem.data[customerId].email\n          },\n          onSubmit: async values => {},\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"firstName\",\n              children: \"First Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              id: \"firstName\",\n              name: \"firstName\",\n              placeholder: \"Jane\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"lastName\",\n              children: \"Last Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              id: \"lastName\",\n              name: \"lastName\",\n              placeholder: \"Doe\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"email\",\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              id: \"email\",\n              name: \"email\",\n              placeholder: \"jane@acme.com\",\n              type: \"email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true);\n    }\n\n    if (customerItem.loading) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 14\n      }, this);\n    }\n\n    if (customerItem.errMsg !== \"\") {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: customerItem.errMsg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 14\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"unable get data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 12\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: ShowData()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 10\n  }, this);\n};\n\n_s(CustomerPage, \"wuG0YGoJe7s4/lHeQxecIjaNpJ0=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = CustomerPage;\nexport default CustomerPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomerPage\");","map":{"version":3,"sources":["/Users/louisvallaey/redux-client/src/containers/CustomerPage.js"],"names":["useEffect","useDispatch","useSelector","GetCustomer","_","Field","Form","Formik","CustomerPage","props","customerId","match","params","id","dispatch","customerItem","state","CustomerItem","FetchData","ShowData","isEmpty","data","_id","firstName","lastName","email","customerSince","values","loading","errMsg"],"mappings":"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","sourcesContent":["import { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { GetCustomer } from \"../actions/customerActions\";\nimport _ from \"lodash\";\nimport \"../App.css\";\nimport { Field, Form, Formik } from \"formik\";\n\nconst CustomerPage = (props) => {\n  const customerId = props.match.params.id;\n  const dispatch = useDispatch();\n  const customerItem = useSelector((state) => state.CustomerItem);\n\n  useEffect(() => {\n    FetchData();\n  }, []);\n\n  const FetchData = () => {\n    dispatch(GetCustomer(customerId));\n  };\n\n  const ShowData = () => {\n    if (!_.isEmpty(customerItem.data[customerId])) {\n      return (\n        <>\n          <p>{customerItem.data[customerId]._id}</p>\n          <p>{customerItem.data[customerId].firstName}</p>\n          <p>{customerItem.data[customerId].lastName}</p>\n          <p>{customerItem.data[customerId].email}</p>\n          <p>{customerItem.data[customerId].customerSince}</p>\n\n          <Formik\n            initialValues={{\n              firstName: customerItem.data[customerId].firstName,\n              lastName: customerItem.data[customerId].lastName,\n              email: customerItem.data[customerId].email,\n            }}\n            onSubmit={async (values) => {}}\n          >\n            <Form>\n              <label htmlFor=\"firstName\">First Name</label>\n              <Field id=\"firstName\" name=\"firstName\" placeholder=\"Jane\" />\n\n              <label htmlFor=\"lastName\">Last Name</label>\n              <Field id=\"lastName\" name=\"lastName\" placeholder=\"Doe\" />\n\n              <label htmlFor=\"email\">Email</label>\n              <Field\n                id=\"email\"\n                name=\"email\"\n                placeholder=\"jane@acme.com\"\n                type=\"email\"\n              />\n              <button type=\"submit\">Submit</button>\n            </Form>\n          </Formik>\n        </>\n      );\n    }\n\n    if (customerItem.loading) {\n      return <p>loading...</p>;\n    }\n    if (customerItem.errMsg !== \"\") {\n      return <p>{customerItem.errMsg}</p>;\n    }\n\n    return <p>unable get data</p>;\n  };\n\n  return <p>{ShowData()}</p>;\n};\n\nexport default CustomerPage;\n"]},"metadata":{},"sourceType":"module"}